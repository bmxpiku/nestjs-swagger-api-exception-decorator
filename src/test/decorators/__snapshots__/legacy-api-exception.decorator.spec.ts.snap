// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Decorator @ApiException - single exception given valid NestJS built in exception (forbidden exception) without template or description should use the default template including the error property 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "examples": Object {
        "ForbiddenException": Object {
          "description": "Forbidden",
          "value": Object {
            "error": "Forbidden",
            "message": "Forbidden",
            "statusCode": 403,
          },
        },
      },
      "schema": Object {
        "description": undefined,
        "properties": Object {
          "error": Object {
            "example": "Forbidden",
            "type": "string",
          },
          "message": Object {
            "example": "Forbidden",
            "type": "string",
          },
          "statusCode": Object {
            "example": 403,
            "type": "number",
          },
        },
        "required": Array [
          "statusCode",
          "message",
        ],
        "type": "object",
      },
    },
  },
  "description": "",
  "isArray": undefined,
  "status": 403,
  "type": undefined,
}
`;

exports[`Decorator @ApiException - single exception given valid NestJS built in exception without template but with description should use the default template 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "examples": Object {
        "BadRequestException": Object {
          "description": "This is a test",
          "value": Object {
            "error": "Bad Request",
            "message": "Bad Request",
            "statusCode": 400,
          },
        },
      },
      "schema": Object {
        "description": "This is a test",
        "properties": Object {
          "error": Object {
            "example": "Bad Request",
            "type": "string",
          },
          "message": Object {
            "example": "Bad Request",
            "type": "string",
          },
          "statusCode": Object {
            "example": 400,
            "type": "number",
          },
        },
        "required": Array [
          "statusCode",
          "message",
        ],
        "type": "object",
      },
    },
  },
  "description": "",
  "isArray": undefined,
  "status": 400,
  "type": undefined,
}
`;

exports[`Decorator @ApiException - single exception given valid NestJS built in exception without template or description should use the default template 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "examples": Object {
        "BadRequestException": Object {
          "description": "Bad Request",
          "value": Object {
            "error": "Bad Request",
            "message": "Bad Request",
            "statusCode": 400,
          },
        },
      },
      "schema": Object {
        "description": undefined,
        "properties": Object {
          "error": Object {
            "example": "Bad Request",
            "type": "string",
          },
          "message": Object {
            "example": "Bad Request",
            "type": "string",
          },
          "statusCode": Object {
            "example": 400,
            "type": "number",
          },
        },
        "required": Array [
          "statusCode",
          "message",
        ],
        "type": "object",
      },
    },
  },
  "description": "",
  "isArray": undefined,
  "status": 400,
  "type": undefined,
}
`;

exports[`Decorator @TemplatedApiException given exception array should use the default template 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "examples": Object {
        "BadRequestException": Object {
          "description": "Bad Request",
          "value": Object {},
        },
      },
      "schema": Object {
        "description": undefined,
        "properties": Object {},
        "required": Array [],
        "type": "object",
      },
    },
  },
  "description": "",
  "isArray": undefined,
  "status": 400,
  "type": undefined,
}
`;

exports[`Decorator @TemplatedApiException given single exception should not print a warning anymore because of duplicate class name 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "examples": Object {
        "BadRequestException": Object {
          "description": "Bad Request",
          "value": Object {},
        },
      },
      "schema": Object {
        "description": undefined,
        "properties": Object {},
        "required": Array [],
        "type": "object",
      },
    },
  },
  "description": "",
  "isArray": undefined,
  "status": 400,
  "type": undefined,
}
`;

exports[`Decorator @TemplatedApiException given single exception should use the default template 1`] = `
Object {
  "content": Object {
    "application/json": Object {
      "examples": Object {
        "BadRequestException": Object {
          "description": "Bad Request",
          "value": Object {},
        },
      },
      "schema": Object {
        "description": undefined,
        "properties": Object {},
        "required": Array [],
        "type": "object",
      },
    },
  },
  "description": "",
  "isArray": undefined,
  "status": 400,
  "type": undefined,
}
`;
